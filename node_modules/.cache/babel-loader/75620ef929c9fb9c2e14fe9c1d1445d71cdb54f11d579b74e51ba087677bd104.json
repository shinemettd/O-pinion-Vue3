{"ast":null,"code":"export default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      responseText: '' // Добавляем новое свойство для хранения текста ответа\n    };\n  },\n  methods: {\n    async showHelloWorld() {\n      console.log('button pressed');\n      await fetch('http://localhost:8081/api/hello').then(res => {\n        if (res.ok) {\n          const responseBody = res.text();\n          this.responseText = responseBody;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","props","msg","String","data","responseText","methods","showHelloWorld","console","log","fetch","then","res","ok","responseBody","text","catch","error"],"sources":["C:\\Program Files\\Vue\\test\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n      <button @click=\"showHelloWorld\" class = \"hello-world-button\">click me 🙂</button>\n      <p class=\"hello-world-text\" v-if=\"responseText\">{{ responseText }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n    name: 'HelloWorld',\n    props: {\n        msg: String,\n    },\n    data() {\n        return {\n            responseText: '', // Добавляем новое свойство для хранения текста ответа\n        };\n    },\n    methods: {\n        async showHelloWorld() {\n            console.log('button pressed')\n            await fetch('http://localhost:8081/api/hello')\n                .then(res => {\n                    if (res.ok) {\n                        const responseBody = res.text();\n                        this.responseText = responseBody;\n                    }\n                }).catch(error => {\n                    console.log(error)\n                })\n        }\n    }\n}\n</script>\n\n<style scoped>\n  .hello-world-button {\n      width: 300px;\n      height: 150px;\n      font-size: 50px;\n      visibility: visible;\n  }\n  .hello-world-text {\n    visibility: hidden;\n      font-size: 50px;\n  }\n</style>\n"],"mappings":"AAQA,eAAe;EACXA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACHC,GAAG,EAAEC;EACT,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE,EAAE,CAAE;IACtB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,cAAcA,CAAA,EAAG;MACnBC,OAAO,CAACC,GAAG,CAAC,gBAAgB;MAC5B,MAAMC,KAAK,CAAC,iCAAiC,EACxCC,IAAI,CAACC,GAAE,IAAK;QACT,IAAIA,GAAG,CAACC,EAAE,EAAE;UACR,MAAMC,YAAW,GAAIF,GAAG,CAACG,IAAI,CAAC,CAAC;UAC/B,IAAI,CAACV,YAAW,GAAIS,YAAY;QACpC;MACJ,CAAC,CAAC,CAACE,KAAK,CAACC,KAAI,IAAK;QACdT,OAAO,CAACC,GAAG,CAACQ,KAAK;MACrB,CAAC;IACT;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}