{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nconst _hoisted_2 = {\n  href: \"http://localhost:8081/api/hello\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"a\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.showHelloWorld && $options.showHelloWorld(...args))\n  }, \"click me ðŸ™‚\")])]);\n}","map":{"version":3,"names":["class","href","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","showHelloWorld"],"sources":["C:\\Program Files\\Vue\\test\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n      <a href=\"http://localhost:8081/api/hello\">\n          <button @click=\"showHelloWorld\">click me ðŸ™‚</button>\n      </a>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n    methods: {\n      async showHelloWorld() {\n          console.log('button pressed')\n          await fetch(\"http://localhost:8084/api/hello\")\n          .then(res => {\n            if (res.ok) {\n                console.log('success')\n            }\n          }).catch (error => {\n              console.log(error)\n          })\n      }\n    }\n}\n</script>\n\n<style scoped>\n  button {\n      width: 300px;\n      height: 150px;\n      font-size: 50px;\n  }\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAO;;EACXC,IAAI,EAAC;AAAiC;;uBAD7CC,mBAAA,CAIM,OAJNC,UAIM,GAHFC,mBAAA,CAEI,KAFJC,UAEI,GADAD,mBAAA,CAAoD;IAA3CE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,aAAW,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}