{"ast":null,"code":"import { ref, onMounted } from 'vue';\n\n// reactive state\n\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const count = ref(0);\n\n    // functions that mutate state and trigger updates\n    function increment() {\n      count.value++;\n    }\n\n    // lifecycle hooks\n    onMounted(() => {\n      console.log(`The initial count is ${count.value}.`);\n    });\n    const __returned__ = {\n      count,\n      increment,\n      ref,\n      onMounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","count","increment","value","console","log"],"sources":["C:/Program Files/Vue/test/src/App.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted } from 'vue'\n\n// reactive state\nconst count = ref(0)\n\n// functions that mutate state and trigger updates\nfunction increment() {\n    count.value++\n}\n\n// lifecycle hooks\nonMounted(() => {\n    console.log(`The initial count is ${count.value}.`)\n})\n</script>\n\n<template>\n    <button @click=\"increment\">Count is: {{ count }}</button>\n</template>"],"mappings":"AACA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;;AAEpC;;;;;;;;IACA,MAAMC,KAAK,GAAGF,GAAG,CAAC,CAAC,CAAC;;IAEpB;IACA,SAASG,SAASA,CAAA,EAAG;MACjBD,KAAK,CAACE,KAAK,EAAE;IACjB;;IAEA;IACAH,SAAS,CAAC,MAAM;MACZI,OAAO,CAACC,GAAG,CAAE,wBAAuBJ,KAAK,CAACE,KAAM,GAAE,CAAC;IACvD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}