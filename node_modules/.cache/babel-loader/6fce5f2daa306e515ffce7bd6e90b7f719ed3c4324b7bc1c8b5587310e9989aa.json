{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"hello\"\n}, [/*#__PURE__*/_createElementVNode(\"button\", null, \"Click me!\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.count++)\n  }, \"Count is: \" + _toDisplayString(_ctx.count), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_Fragment","_hoisted_1","onClick","_cache","$event","_ctx","count","_toDisplayString"],"sources":["C:\\Program Files\\Vue\\test\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n      <button>Click me!</button>\n  </div>\n\n    <button @click=\"count++\">Count is: {{ count }}</button>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n}\nconst count = ref(0)\n</script>\n\n<style scoped>\n\n</style>\n"],"mappings":";gCACEA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAO,I,aACdD,mBAAA,CAA0B,gBAAlB,WAAS,E;;uBAFvBE,mBAAA,CAAAC,SAAA,SACEC,UAEM,EAEJJ,mBAAA,CAAuD;IAA9CK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAI,YAAU,GAAAC,gBAAA,CAAGF,IAAA,CAAAC,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}