{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"hello-world-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.textVisible ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.showHelloWorld && $options.showHelloWorld(...args)),\n    class: \"hello-world-button\"\n  }, \"click me üôÇ\")) : _createCommentVNode(\"v-if\", true), $data.textVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.responseText), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","textVisible","onClick","_cache","args","$options","showHelloWorld","_createCommentVNode","_hoisted_2","_toDisplayString","responseText"],"sources":["C:\\Program Files\\Vue\\test\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n    <div class=\"hello\">\n        <button v-if=\"!textVisible\" @click=\"showHelloWorld\" class=\"hello-world-button\">click me üôÇ</button>\n        <div v-if=\"textVisible\" class=\"hello-world-text\">{{ responseText }}</div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'HelloWorld',\n    props: {\n        msg: String,\n    },\n    data() {\n        return {\n            responseText: '',\n            textVisible: false, // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç—å—é —Ç–µ–∫—Å—Ç–∞\n        };\n    },\n    methods: {\n        async showHelloWorld() {\n            console.log('button pressed');\n            try {\n                const res = await fetch('http://localhost:8081/api/hello');\n                if (res.ok) {\n                    this.responseText = await res.text();\n                    console.log(this.responseText);\n                    this.textVisible = true; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç, —Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É\n                } else {\n                    console.log('Error:', res.statusText);\n                }\n            } catch (error) {\n                console.error('Error:', error);\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.hello-world-button {\n    width: 300px;\n    height: 150px;\n    font-size: 50px;\n    visibility: visible;\n}\n.hello-world-text {\n    visibility: hidden;\n    font-size: 50px;\n}\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAO;;EADtBC,GAAA;EAGgCD,KAAK,EAAC;;;uBAFlCE,mBAAA,CAGM,OAHNC,UAGM,G,CAFaC,KAAA,CAAAC,WAAW,I,cAA1BH,mBAAA,CAAmG;IAF3GD,GAAA;IAEqCK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;IAAER,KAAK,EAAC;KAAqB,aAAW,KAFlGW,mBAAA,gBAGmBP,KAAA,CAAAC,WAAW,I,cAAtBH,mBAAA,CAAyE,OAAzEU,UAAyE,EAAAC,gBAAA,CAArBT,KAAA,CAAAU,YAAY,oBAHxEH,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}