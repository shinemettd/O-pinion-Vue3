{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"hello-world-text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.showHelloWorld && $options.showHelloWorld(...args)),\n    class: \"hello-world-button\"\n  }, \"click me üôÇ\"), $data.responseText ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.responseText), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","showHelloWorld","$data","responseText","_hoisted_2","_toDisplayString","_createCommentVNode"],"sources":["C:\\Program Files\\Vue\\test\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n    <div class=\"hello\">\n        <button @click=\"showHelloWorld\" class=\"hello-world-button\">click me üôÇ</button>\n        <div class=\"hello-world-text\" v-if=\"responseText\">{{ responseText }}</div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'HelloWorld',\n    props: {\n        msg: String,\n    },\n    data() {\n        return {\n            responseText: '', // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞\n        };\n    },\n    methods: {\n        async showHelloWorld() {\n            console.log('button pressed');\n            try {\n                const res = await fetch('http://localhost:8081/api/hello');\n                if (res.ok) {\n                    const responseBody = await res.text();\n                    this.responseText = responseBody; // –û–±–Ω–æ–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –æ—Ç–≤–µ—Ç–∞\n                } else {\n                    console.log('Error:', res.statusText);\n                }\n            } catch (error) {\n                console.error('Error:', error);\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.hello-world-button {\n    width: 300px;\n    height: 150px;\n    font-size: 50px;\n    visibility: visible;\n}\n.hello-world-text {\n    visibility: hidden;\n    font-size: 50px;\n}\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAO;;EADtBC,GAAA;EAGaD,KAAK,EAAC;;;uBAFfE,mBAAA,CAGM,OAHNC,UAGM,GAFFC,mBAAA,CAA+E;IAAtEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;IAAEP,KAAK,EAAC;KAAqB,aAAW,GAClCU,KAAA,CAAAC,YAAY,I,cAAhDT,mBAAA,CAA0E,OAA1EU,UAA0E,EAAAC,gBAAA,CAArBH,KAAA,CAAAC,YAAY,oBAHzEG,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}