{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    onClick: $setup.increment\n  }, \"Count is: \" + _toDisplayString($setup.count), 1 /* TEXT */);\n}","map":{"version":3,"names":["_createElementBlock","onClick","$setup","increment","_toDisplayString","count"],"sources":["C:\\Program Files\\Vue\\test\\src\\App.vue"],"sourcesContent":["<script setup>\nimport { ref, onMounted } from 'vue'\n\n// reactive state\nconst count = ref(0)\n\n// functions that mutate state and trigger updates\nfunction increment() {\n    count.value++\n}\n\n// lifecycle hooks\nonMounted(() => {\n    console.log(`The initial count is ${count.value}.`)\n})\n</script>\n\n<template>\n    <button @click=\"increment\">Count is: {{ count }}</button>\n</template>\n\n<style>\n    \n</style>"],"mappings":";;uBAkBIA,mBAAA,CAAyD;IAAhDC,OAAK,EAAEC,MAAA,CAAAC;EAAS,GAAE,YAAU,GAAAC,gBAAA,CAAGF,MAAA,CAAAG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}